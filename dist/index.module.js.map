{"version":3,"file":"index.module.js","sources":["../src/index.ts"],"sourcesContent":["\nimport * as Cesium from \"cesium/Cesium\";\nimport { BasicRenderer } from \"pbf-basic-render\";\n\nimport type { Credit, WebMercatorTilingScheme, DefaultProxy, GeographicTilingScheme } from \"cesium\";\n\n/**\n *\n * @param {Object} options\n * @param {Object} options.style - mapbox style object\n * @param {Function} [options.sourceFilter] - sourceFilter is used to filter which source participate in pickFeature process.\n * @param {Number} [options.maximumLevel] - if cesium zoom level exceeds maximumLevel, layer will be invisible.\n * @param {Number} [options.minimumLevel] - if cesium zoom level belows minimumLevel, layer will be invisible.\n * @param {Number} [options.tileSize] - can be 256 or 512.\n * @param {Boolean} [options.hasAlphaChannel] -\n * @param {String} [options.credit] -\n *\n */\ntype MVTImageryProviderOptions = {\n  style: any;\n  showCanvas?: boolean;\n  tileSize?: number;\n  tileWidth?: number;\n  tileHeight?: number;\n  maximumLevel?: number;\n  minimumLevel?: number;\n  tileDiscardPolicy?: undefined;\n  credit?: Credit;\n  hasAlphaChannel?: boolean;\n  sourceFilter?: any;\n  header?: any;\n  tilingScheme?: WebMercatorTilingScheme | GeographicTilingScheme;\n}\n\nclass MVTImageryProvider {\n  mapboxRenderer: BasicRenderer;\n  ready: boolean;\n  readyPromise: Promise<void>;\n  rectangle: any;\n  tileSize: number;\n  tileWidth: number;\n  tileHeight: number;\n  maximumLevel: number;\n  minimumLevel: number;\n  tileDiscardPolicy: undefined;\n  proxy: DefaultProxy;\n  hasAlphaChannel: boolean;\n  sourceFilter: any;\n  tilingScheme: WebMercatorTilingScheme | GeographicTilingScheme;\n  options: MVTImageryProviderOptions;\n\n  constructor(options: MVTImageryProviderOptions) {\n    this.options = options;\n\n    this.mapboxRenderer = new BasicRenderer({\n      style: options.style,\n      transformRequest: (url: string, type: any) => this.transformRequest(url, type),\n    });\n\n    if (options.showCanvas) {\n      this.mapboxRenderer.showCanvasForDebug();\n    }\n\n    this.ready = false;\n    this.readyPromise = this.mapboxRenderer._style.loadedPromise.then(() => {\n      this.ready = true;\n    });\n\n    this.tilingScheme = options.tilingScheme ?? new Cesium.WebMercatorTilingScheme();;\n    this.rectangle = this.tilingScheme.rectangle;\n    this.tileSize = this.tileWidth = this.tileHeight = options.tileSize || 512;\n    this.maximumLevel = options.maximumLevel || Number.MAX_SAFE_INTEGER;\n    this.minimumLevel = options.minimumLevel || 0;\n    this.tileDiscardPolicy = undefined;\n    //this.errorEvent = new Cesium.Event();\n    this.proxy = new Cesium.DefaultProxy(\"\");\n    this.hasAlphaChannel = options.hasAlphaChannel ?? true;\n    this.sourceFilter = options.sourceFilter;\n    this.options = options;\n  }\n\n  transformRequest = (url: string, resourceType: string) => {\n    if (resourceType === 'Source' && this.options.header) {\n      return {\n        url,\n        headers: this.options.header\n      }\n    }\n    return {\n      url\n    };\n  }\n\n  // @ts-ignore\n  getTileCredits(x, y, level) {\n    return [];\n  }\n\n  createTile() {\n    const canv = document.createElement(\"canvas\");\n    canv.width = this.tileSize;\n    canv.height = this.tileSize;\n    canv.style.imageRendering = \"pixelated\";\n    const ctx = canv.getContext(\"2d\");\n    if (ctx) {\n      ctx.globalCompositeOperation = \"copy\";\n    }\n    return canv;\n  }\n\n  requestImage(\n    x: any,\n    y: any,\n    zoom: number,\n    releaseTile = true\n  ): Promise<HTMLImageElement | HTMLCanvasElement | any> | undefined {\n    if (zoom > this.maximumLevel || zoom < this.minimumLevel) {\n      return Promise.reject(undefined);\n    }\n\n    this.mapboxRenderer.filterForZoom(zoom);\n    const tilesSpec: { source: string; z: number; x: any; y: any; left: number; top: number; size: number; }[] = [];\n    this.mapboxRenderer.getVisibleSources(zoom).forEach((s: any) => {\n      tilesSpec.push({\n        source: s,\n        z: zoom,\n        x: x,\n        y: y,\n        left: 0,\n        top: 0,\n        size: this.tileSize,\n      });\n    });\n\n    console.log('tilesSpec', tilesSpec)\n\n    return new Promise((resolve, reject) => {\n      const canv = this.createTile();\n      const renderRef = this.mapboxRenderer.renderTiles(\n        canv.getContext(\"2d\"),\n        {\n          srcLeft: 0,\n          srcTop: 0,\n          width: this.tileSize,\n          height: this.tileSize,\n          destLeft: 0,\n          destTop: 0,\n        },\n        tilesSpec,\n        (err: any) => {\n          if (!!err) {\n            console.error(err);\n            switch (err) {\n              case \"canceled\":\n              case \"fully-canceled\":\n                reject(undefined);\n                break;\n              default:\n                reject(undefined);\n            }\n          } else {\n            if (releaseTile) {\n              renderRef.consumer.ctx = undefined;\n              resolve(canv);\n              // releaseTile默认为true，对应Cesium请求图像的情形\n              this.mapboxRenderer.releaseRender(renderRef);\n            } else {\n              // releaseTile为false时在由pickFeature手动调用，在渲染完成之后在pickFeature里边手动释放tile\n              resolve(renderRef);\n            }\n          }\n        }\n      );\n    });\n  }\n\n  pickFeatures(x: any, y: any, zoom: number, longitude: any, latitude: any) {\n    return this.requestImage(x, y, zoom, false)?.then((renderRef) => {\n      let targetSources = this.mapboxRenderer.getVisibleSources(zoom);\n      targetSources = this.sourceFilter\n        ? this.sourceFilter(targetSources)\n        : targetSources;\n\n      const queryResult: any[] | PromiseLike<any[]> = [];\n\n      const lng = Cesium.Math.toDegrees(longitude);\n      const lat = Cesium.Math.toDegrees(latitude);\n\n      targetSources.forEach((s: any) => {\n        queryResult.push({\n          data: this.mapboxRenderer.queryRenderedFeatures({\n            source: s,\n            renderedZoom: zoom,\n            lng,\n            lat,\n            tileZ: zoom,\n          }),\n        });\n      });\n\n      // release tile\n      renderRef.consumer.ctx = undefined;\n      this.mapboxRenderer.releaseRender(renderRef);\n      return queryResult;\n    });\n  }\n}\n\nexport default MVTImageryProvider;\n"],"names":["MVTImageryProvider","options","mapboxRenderer","ready","readyPromise","rectangle","tileSize","tileWidth","tileHeight","maximumLevel","minimumLevel","tileDiscardPolicy","proxy","hasAlphaChannel","sourceFilter","tilingScheme","transformRequest","url","resourceType","_this","header","headers","this","BasicRenderer","style","type","showCanvas","showCanvasForDebug","_style","loadedPromise","then","Cesium","WebMercatorTilingScheme","Number","MAX_SAFE_INTEGER","undefined","DefaultProxy","getTileCredits","x","y","level","createTile","canv","document","createElement","width","height","imageRendering","ctx","getContext","globalCompositeOperation","requestImage","zoom","releaseTile","Promise","reject","filterForZoom","tilesSpec","getVisibleSources","forEach","s","push","source","z","left","top","size","_this2","console","log","resolve","renderRef","renderTiles","srcLeft","srcTop","destLeft","destTop","err","error","consumer","releaseRender","pickFeatures","longitude","latitude","_this$requestImage","targetSources","_this3","queryResult","lng","Math","toDegrees","lat","data","queryRenderedFeatures","renderedZoom","tileZ"],"mappings":"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"}