import*as e from"cesium/Cesium";import{BasicRenderer as i}from"pbf-basic-render";class t{constructor(t){var s,r;this.mapboxRenderer=void 0,this.ready=void 0,this.readyPromise=void 0,this.rectangle=void 0,this.tileSize=void 0,this.tileWidth=void 0,this.tileHeight=void 0,this.maximumLevel=void 0,this.minimumLevel=void 0,this.tileDiscardPolicy=void 0,this.proxy=void 0,this.hasAlphaChannel=void 0,this.sourceFilter=void 0,this.tilingScheme=void 0,this.options=void 0,this.transformRequest=(e,i)=>"Source"===i&&this.options.header?{url:e,headers:this.options.header}:{url:e},this.options=t,this.mapboxRenderer=new i({style:t.style,transformRequest:(e,i)=>this.transformRequest(e,i)}),t.showCanvas&&this.mapboxRenderer.showCanvasForDebug(),this.ready=!1,this.readyPromise=this.mapboxRenderer._style.loadedPromise.then(()=>{this.ready=!0}),this.tilingScheme=null!=(s=t.tilingScheme)?s:new e.WebMercatorTilingScheme,this.rectangle=this.tilingScheme.rectangle,this.tileSize=this.tileWidth=this.tileHeight=t.tileSize||512,this.maximumLevel=t.maximumLevel||Number.MAX_SAFE_INTEGER,this.minimumLevel=t.minimumLevel||0,this.tileDiscardPolicy=void 0,this.proxy=new e.DefaultProxy(""),this.hasAlphaChannel=null==(r=t.hasAlphaChannel)||r,this.sourceFilter=t.sourceFilter,this.options=t}getTileCredits(e,i,t){return[]}createTile(){const e=document.createElement("canvas");e.width=this.tileSize,e.height=this.tileSize,e.style.imageRendering="pixelated";const i=e.getContext("2d");return i&&(i.globalCompositeOperation="copy"),e}requestImage(e,i,t,s=!0){if(t>this.maximumLevel||t<this.minimumLevel)return Promise.reject(void 0);this.mapboxRenderer.filterForZoom(t);const r=[];return this.mapboxRenderer.getVisibleSources(t).forEach(s=>{r.push({source:s,z:t,x:e,y:i,left:0,top:0,size:this.tileSize})}),console.log("tilesSpec",r),new Promise((e,i)=>{const t=this.createTile(),o=this.mapboxRenderer.renderTiles(t.getContext("2d"),{srcLeft:0,srcTop:0,width:this.tileSize,height:this.tileSize,destLeft:0,destTop:0},r,r=>{r?(console.error(r),i(void 0)):s?(o.consumer.ctx=void 0,e(t),this.mapboxRenderer.releaseRender(o)):e(o)})})}pickFeatures(i,t,s,r,o){var h;return null==(h=this.requestImage(i,t,s,!1))?void 0:h.then(i=>{let t=this.mapboxRenderer.getVisibleSources(s);t=this.sourceFilter?this.sourceFilter(t):t;const h=[],l=e.Math.toDegrees(r),n=e.Math.toDegrees(o);return t.forEach(e=>{h.push({data:this.mapboxRenderer.queryRenderedFeatures({source:e,renderedZoom:s,lng:l,lat:n,tileZ:s})})}),i.consumer.ctx=void 0,this.mapboxRenderer.releaseRender(i),h})}}export{t as default};
//# sourceMappingURL=index.modern.js.map
